function COEFFICIENTS=cubic_spline_interpolation(XIN,YIN)
N=length(XIN); %THE NUMBER OF DATAPOINTS
INTERVALS=N-1; %THE NUMBER OF INTERVALS BETWEEN THE DATAPOINTS

%CALCULATE THE LENGTHS OF THE INTERVALS (H)
%------------------------------------------
H=zeros(1,INTERVALS); %INITIALIZE THE VECTOR FOR OPTIMIZING SPEED
for i=1:INTERVALS
    H(i)=XIN(i+1)-XIN(i); %SUBSTITUTE THE VALUES IN THE INITIAL VECTOR WITH THE CORRESPONDING LENGTHS OF THE INTERVALS
end


%CALULATE 'A':
%'A' IS THE LEFT HAND SIDE OF THE SET OF LINEAR EQUATIONS USED (Am=b) THAT
%RELATES THE SECOND DERIVATIVES AT EACH POINT WITH THE ADJACENT POINTS OF
%f(x). THIS MATRIX CONTAINS VALUES OF H AND
%COMBINED VALUES OF H IN ORDER TO CALCULATE THE VALUES OF m IN THE INTERVAL
%OF x(2):x(N-1).
%--------------------------------------------------------------------------
A=zeros((N-2),N); %INITIALIZE ARRAY THAT WILL HAVE SUBSTITUTED VALUES IN FOR OPTIMIZING SPEED
k=0; %VARIABLE k ACTS AS COUNT WITHIN THE FOLLOWING LOOP
for i=1:(N-2)
    A(i,1+k)=H(i); %THE FIRST TERM OF LEFT HAND SIDE OF EQUATION
    A(i,2+k)=2*(H(i)+H(i+1)); %THE SECOND TERM OF LEFT HAND SIDE OF EQUATION 
    A(i,3+k)=H(i+1); %THE THIRD TERM OF THE THE LEFT HAND SIDE OF EQUATION
    k=k+1; %INCREASE THE COUNT EACH TIME SO THAT WE PUSH THE THREE TERMS FURTHER TO THE RIGHT SINCE m(i-1) m(i) AND m(i+1) CHANGES EACH TIME WE MOVE FROM x(2) to x(N-1)
end


%DUE TO THE FACT THAT WE ARE GIVEN THAT m(1) AND m(N) ARE EQUAL TO ZERO
%THIS MEANS THAT THE FIRST ROW OF ARRAY 'A' SHOULD START BY OMITING THE
%MULTIPLICATION WITH m(1) WHILE THE LAST ROW SHOULD END BY OMITTING ANY
%MULTIPLICATION WITH m(N). A REDUCTION OF VECTOR m BY TWO ROWS MEANS THAT A
%FURTHER REDUCTION OF 2 COLUMNS CAN BE PERFORMED ON ARRAY 'A' GETTING RID
%ALL ROWS OF COLUMN 1 AND N FOR FASTER PROCESSING AND CALCULATION.
%THEREFORE..
A=A(:,2:(N-1));


%CALCULATE b:
%b AS DEFINED IN THE EQUATION IS A VECTOR OF ALL THE RIGHT HAND SIDES OF THE
%SET OF LINEAR EQUATIONS OF THE FORM OF EQUATION FOR THE POINTS FROM
%x(2) to x(N-1) SINCE NO MORE CAN BE CALCULATED AS EACH ELEMENT TAKES INTO
%CALCULATION THE ADJACENT VALUES OF f(x) FROM BOTH SIDES OF THE POINT.
%--------------------------------------------------------------------------
b=zeros((N-2),1); %INITIALIZE THE VECTOR FOR OPTIMIZING SPEED BY SUBSTITUTION
for i=2:(N-1)
    b(i-1)=6*(((YIN(i+1)-YIN(i))/H(i))-((YIN(i)-YIN(i-1))/H(i-1))) ; %THE VALUE OF b CALCULATED FOR EACH POINT FROM x(2) to x(N-1)
end


%CALCULATE THE VALUES OF m
%THE ARRAYS ABOVE ALLOW US TO FORM Am=b WHERE MATLAB ALLOWS US TO SOLVE FOR
%m USING INVERSE OPERATION FOR EACH POINT FROM x(2) to x(N-1)
%--------------------------------------------------------------------------
m=A\b;
m=[0;m;0]; %ADD THE VALUES OF m FOR FIRST AND LAST POINT


%CALCULATE THE ARRAY 'COEFFICIENTS' WHICH WILL BE 4xINTERVALS ARRAY
%CONTAINING ALL THE VALUES OF a(i),b(i),c(i),d(i) OF THE CUBIC LINE
%EQUATION FOR EACH INTERVAL
%--------------------------------------------------------------------------
const_a=zeros(1,INTERVALS); %INITIALIZE ARRAY a FOR OPTIMIZATION OF SPEED
const_b=zeros(1,INTERVALS); %INITIALIZE ARRAY b FOR OPTIMIZATION OF SPEED
const_c=zeros(1,INTERVALS); %INITIALIZE ARRAY c FOR OPTIMIZATION OF SPEED
const_d=zeros(1,INTERVALS); %INITIALIZE ARRAY d FOR OPTIMIZATION OF SPEED

for i=1:INTERVALS
    const_a(i)=YIN(i); %SUBSTITUTE 
    const_b(i)=((YIN(i+1)-YIN(i))/H(i))-((H(i)*(2*m(i)+m(i+1)))/6); %SUBSTITUTE 
    const_c(i)=m(i)/2; %SUBSTITUTE
    const_d(i)=(m(i+1)-m(i))/(6*H(i)); %SUBSTITUTE
end

COEFFICIENTS=[const_a;const_b;const_c;const_d]; %CREATE THE ARRAY


%FIX COEEFICIENTS FORM TO BE INPUTTED IN cubicEval
%-------------------------------------------------
COEFFICIENTS=COEFFICIENTS';
COEFFICIENTS=flip(COEFFICIENTS,2);
end
